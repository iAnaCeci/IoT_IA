Classifica√ß√£o com DNNs
- √â atribuir classes aos dados de entrada, exemplo, informar o animal presente em uma imagem (i.e., conjunto de pixel).
V√°rios algoritmos de ML para solucionar este problema: Regress√£o Log√≠stica e Softmax, Decision tree, maquinas de vetores de suporte, etc.
-Redes neurais podem tamb√©m resolver esses problema, basta mudar a fun√ß√£o de ativa√ß√£o da camada de sa√≠da e a fun√ß√£o de erro.


Classifica√ß√£o com neur√¥nios

Os neur√¥nios podem ser usados para classifica√ß√£o bin√°ria, se usarmos uma fun√ß√£o de ativa√ß√£o do tipo sigmoide (ou log√≠stica).
A fun√ß√£o de ativa√ß√£o log√≠stica, ùëì(. ), √© uma 
suaviza√ß√£o da fun√ß√£o degrau e, portanto, deriv√°vel, que mapeia os valores de g(x) (intervalo infinito) em valores no intervalo [0,1]

Fun√ß√£o discriminante (separa as classes) g(x)

Separa as classes usando hiperplanos.

A probabilidade da classe negativa √© 
obtida atrav√©s do complemento de y, i.e. 1-y.
Notem y^ pode assumir qualquer valor no intervalo [0,1], ou seja, esse √© um problema de regress√£o e n√£o de classifica√ß√£o.        √â um regressor log√≠stico. 

Para classificar quantizamos os valores de sa√≠da da fun√ß√£o de ativa√ß√£o


Cada sa√≠da da rede neural da a probabilidade de uma das classes.

CLASSIFICA√á√ÉO COM REDES NEURAIS
-Portanto, se quisermos projetar uma 
rede neural capaz de distinguir entre 
gatos e cachorros, poder√≠amos ter 
um neur√¥nio de sa√≠da 
representando gatos e outro 
representando c√£es.
-Cada neur√¥nio de sa√≠da ir√° 
apresentar a probabilidade de uma 
imagem de entrada pertencer a uma 
das duas classes






